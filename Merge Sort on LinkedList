Node* merge(Node* head1,Node* head2){
        Node* dum=new Node(-1);
        Node* temp=dum;
        Node *temp1=head1,*temp2=head2;
        while(temp1!=NULL && temp2!=NULL){
            if(temp1->data>temp2->data){
                temp->next=temp2;
                temp2=temp2->next;
            }
            else {
                temp->next=temp1;
                temp1=temp1->next;
            }
            temp=temp->next;
        }
        while(temp1!=NULL)
        {
            temp->next=temp1;
            temp1=temp1->next;
            temp=temp->next;
        }
        while(temp2!=NULL)
        {
            temp->next=temp2;
            temp2=temp2->next;
            temp=temp->next;
        }
        return dum->next;
        
    }
    Node* midf(Node* head){
        Node* slow=head,*fast=head->next;
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
    Node* mergeSort(Node* head){
        if(head->next==NULL)
        return head;
        Node* mid=midf(head);
        Node* dum=mid->next;
        mid->next=NULL;
        Node* left=mergeSort(head);
        Node* right=mergeSort(dum);
        Node* ans=merge(left,right);
        return ans;
    }
